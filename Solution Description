The solution is towards a browser with adobe support.
Two ways of achieving:-
1)To hold to present day browser's version status by not updating the current versions of browsers. Since the problem of mainstream browsers removing the access is done by next introduced version update. 

2)To build web browser of today's flash support kind anytime after 2020. Mozilla firefox can be intended to do since it is open source.

Scope of seemed arising problems:
1)What if this is not possible if manufacturer changes terms.
2)What if we lose current version package
3)What if todays version will not be available tomorrow, incase lost.


SOLUTIONS as numbered:-
1)Mozilla firefox is opensource and we can be authority to own it as our product with future open source leveraged adoptions
2)Even if all is lost, we can easily build from stack and then on customize it for flash enablity.
3)Though we would try to store a copy of them.Though lost in case.The current commitwould be still available since its opensource.

Since in the web briefing, it was mentioned in reply to an answer that a subsidiary plugin to support flash would be accepted. This means that procedure follow of end user is at customized our control to this extent. So the ask of using our browser can be done. A directive to adopt firefox browser can be asked for it is quite a minimalist change in client behaviour. 

For Example Internet explorer has grown over just in little time from internet explorer to edge to edge chromium recently. This would be an always problem with different authoritative tool usage in our workflow.

Actually as a tech intellect provider empowering them by directing them towards an open source leveraged approach they might not be aware off would in actual be a right give to.

With other authoritative tool at place, for all future versions compatable is a false promise we would be delivering, since they might change terms as convience any time. Our now problem to hack is the best example. It is that this dependency of "their authority" policy to remove support for flash is why this discripency. Otherwise in actual works for us so fine.
 
But with open source adoption, we can actually deliver their promise of future versions compatability too, since we are the authority and can leverage any future changes too.

If the world of internet changes so much in future we can still make it happen as we take that time version and add flash support the subsidary code to be tweaked is also shown ind demo video.

This is actually a right opportunity strategy to adopt for us to keep up with the promise more diligently, which unlike we couldn't fulfilll last time for everlasting compatabile product and regain their trust even subtly.

"All these are itterative steps preparing for even more fullfleged foolproof no stone unturned protected solution making at each steps. As in actual the first step itself sufficiently solves the problem."

The demo video available in the repository proves the following:
1)A current version would be available
2)The way to enable flash enablity in the browser. Where the files of flash disablity to be turned on and in future what scripts can be used to turn it on.
3)Building of firefox from stack.

